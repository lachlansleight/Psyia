// We need to manually mark what our kernel names are
#pragma kernel EmitFunction

struct ParticleData {
	float3 pos;
	float3 velocity;
	float4 color;
	int isAlive;
	float age;
};

RWStructuredBuffer<ParticleData> outputBuffer;
ConsumeStructuredBuffer<uint> deadList;

float3 SpawnPosition;
float3 LastSpawnPosition;

//returns random from 0 to 1
float rand(float2 n) {
	return frac(sin(dot(n, float2(12.9898, 78.233))) * 43758.5453);
}

[numthreads(1,1,1)]
void EmitFunction() {
	uint newIndex = deadList.Consume();
	ParticleData CurrentParticle = outputBuffer[newIndex];

	CurrentParticle.age = 0;
	CurrentParticle.isAlive = 1;
	CurrentParticle.pos = lerp(LastSpawnPosition, SpawnPosition, rand(float2(newIndex - 250.125, newIndex + 250.125)));
	CurrentParticle.velocity = (float3(rand(float2(newIndex, newIndex)), rand(float2(newIndex + 1000.5, newIndex + 1000.5)), rand(float2(newIndex - 1000.5, newIndex - 1000.5))) - float3(0.5, 0.5, 0.5)) * (rand(float2(newIndex + 500.25, newIndex - 500.25)) * 0.02);


	outputBuffer[newIndex] = CurrentParticle;
}